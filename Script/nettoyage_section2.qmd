---
title: "traitement section 2"
author: "Nouboussi & cissé"
format: html
editor: visual
---

## chargement des library utiles

```{r}

library(haven)
library(dplyr)

```

## Chargement de la section

```{r}
library(haven)
data <- read_dta("../Raw_data/Fichiers_Menage&Individus/section2_select.dta")

data <- data |> mutate(across(where(is.labelled), as_factor))
```

### Lot 1: Aphabétisation

on va regrouper en ces variables

-savoir_lire_ecrire_français

-savoir_lire_ecrire_langue_locale (uniquement)

-savoir_lire_ecrire_autres_langue(uniquement)

-comprendre_français

-comprendre_langue_locale (uniquement)

-comprendre_autre (uniquement)

tabulation des variables lire et ecrire en une langue

```{r}
tables <- data |> 
    filter(age<=16) |> 
  select( s02q01__1,s02q01__2, s02q01__3,s02q02__1,s02q02__2, s02q02__3,s02q02a__1,s02q02a__2,s02q02a__3  ) |> 
  lapply(function(var) {
    df <- as.data.frame(table(var, useNA = "ifany"))
    df$Pourcentage <- round(100 * df$Freq / sum(df$Freq), 1)  # Calcul du %
    return(df)
  })

for (var in names(tables)) {
  cat("\n==== Tableau des fréquences pour", var, "====\n")
  print(tables[[var]])
}
```

creation de la variable alphabet

```{r}
data <- data |> 
    mutate(
        Alphabet = case_when(
            is.na(s02q01__1) & is.na(s02q02__1) ~ NA_character_,  # Les deux NA → NA
            s02q01__1 == "Oui" & s02q02__1 == "Oui" ~ "Alphabet français",      # Les deux Oui → "Oui"
            TRUE ~ "Non"                                           # Tout le reste → "Non"
        ),
        
        Alphabet = case_when(
            Alphabet == "Alphabet français" ~ "Alphabet français",  # Conserver "Oui"
            
            # Vérifier si la personne sait lire ou écrire en langue locale
            (Alphabet %in% c("Non", NA)) & 
            (s02q01__2 == "Oui" | s02q02__2 == "Oui") ~ "Alphabet Langue locale",
            
            # Vérifier si la personne sait lire/écrire en une autre langue
            (Alphabet %in% c("Non", NA)) & 
            (s02q01__3 == "Oui" | s02q02__3 == "Oui") ~ "Alphabet autre langue",
            
            # Vérifier si la personne sait lire/écrire en une autre langue
            (Alphabet %in% c("Non"))  ~ "Analphabet",
            
            # Sinon, conserver la valeur existante
            TRUE ~ Alphabet
        ),
        Alphabet = as.factor(Alphabet) # Conversion en facteur
    )
```

stat desc sur les enfant de moins de 16 ans

```{r}
tables <- data |> 
    filter(age<=16) |> 
  select( Alphabet  ) |> 
  lapply(function(var) {
    df <- as.data.frame(table(var, useNA = "ifany"))
    df$Pourcentage <- round(100 * df$Freq / sum(df$Freq), 1)  # Calcul du %
    return(df)
  })

for (var in names(tables)) {
  cat("\n==== Tableau des fréquences pour", var, "====\n")
  print(tables[[var]])
}
```

NB: on garde seulement la var Alphabet

### Lot 2: ecole formelle ou informelle

```{r}
tables <- data |> 
    filter(age<=16) |> 
  select( s02q03,s02q05,s02q06,  s02q07 ,s02q08 ,  s02q10 , s02q11 
  ) |> 
  lapply(function(var) {
    df <- as.data.frame(table(var, useNA = "ifany"))
    df$Pourcentage <- round(100 * df$Freq / sum(df$Freq), 1)  # Calcul du %
    return(df)
  })

for (var in names(tables)) {
  cat("\n==== Tableau des fréquences pour", var, "====\n")
  print(tables[[var]])
}
```

```{r}
data<- data |>
    mutate(type_ecole=case_when(
        
            s02q03 == "Oui"  ~ "ecole formelle",
            s02q05 == "Oui" ~ "ecole non formelle",
            s02q03 == "Non" & s02q05 == "Non"  ~ "Aucune formation", 
            Alphabet == "Analphabet" ~"Aucune formation",
            TRUE ~ NA ),
           s02q29=ifelse(type_ecole %in% c("Aucune formation","ecole non formelle" ),"hors système", as.character(s02q29)),
           s02q29= as.factor(ifelse(s02q29 %in% c("Post-secondaire (préparation diplômes niveau BAC+2)","Supérieur" ), "Supérieur",
                              ifelse(s02q29 %in% c("Secondaire 1 (Post Primaire) Général","Secondaire 1 (Post Primaire) Technique", "Secondaire 1er cycle" ), "Secondaire 1er cycle",
                              ifelse(s02q29 %in% c("Secondaire 2 Général","Secondaire 2 Technique", "Secondaire 2e cycle" ), "Secondaire 2e cycle",as.character(s02q29))
                                     )
                              ) ),
           s02q33=as.factor(case_when(
               type_ecole %in% c("Aucune formation","ecole non formelle" )~"hors système",
               s02q33=="Aucun" & s02q29=="Secondaire 1er cycle" ~"CEPE",
               s02q33=="Aucun" & s02q29=="Secondaire 2e cycle" ~"BEPC",
               s02q33=="CEPE" & s02q29=="Secondaire 2e cycle" ~"BEPC",
               s02q33=="BEPC" & s02q29=="Supérieur" ~"BAC",
               s02q33=="CAP" & s02q29=="Supérieur" ~"BAC",
                TRUE ~ as.character(s02q33)
               
           ))
           
           )
```

**quelques verifications**

```{r}
#quelle année a til frequenté pour la dernier fois et type ecole
table(data  |> select(s02q32,type_ecole), useNA ="ifany" )# bon pour aucune formation

#diplome le plus elevé
table(data  |> select(s02q33,type_ecole), useNA ="ifany" )
```

```{r}
# age de début d'école
data |> 
    group_by(type_ecole) |> 

    summarise(
        age_moyen = mean(s02q07, na.rm = TRUE),  # Moyenne d'âge
        age_min = min(s02q07, na.rm = TRUE),  # Âge minimum
        age_max = max(s02q07, na.rm = TRUE),  # Âge maximum
        n = n()  # Nombre d'observations)
    )

#
data |> 
    pull(s02q07) |>  # Extrait la colonne sous forme de vecteur
    hist(main = "Histogramme de l'âge de début d'école", 
         xlab = "Âge de début d'école", 
         ylab = "Fréquence", 
         col = "lightblue", 
         border = "black")

# avoir frequenté en 2029/2020

prop.table(table(data|> select(s02q03,s02q08), useNA ="ifany" ))# juste pour les ecoles formelles

```

```{r}
# renpmmmer la variable sexe
data <- data |> 
  rename(
    age_debut_ecole = s02q07,
    frequente_2019_2020= s02q08,
    result_2019_2020= s02q10,
    raison_abandon_2019_2020= s02q11,
    niveau_etude_2019_2020= s02q14,
    classe_2019_2020= s02q16,
    niveau_etude_plus_eleve= s02q29,
    diplome_plus_eleve= s02q33
  )
```

NB: dans cette partie on garde les var type_ecole, age de but d'école, avoir frequenté en 2019/2020, resultat année 2020, raison de l'abandon, niveau d'étude en 2020/2021, classe frequenté, NIVEAUd'étude le plus evele. diplome le plus evele

## selection de la base corrigée

```{r}
data<- data |> 
            select(grappe,menage,s01q00a ,Alphabet, age_debut_ecole,ends_with("2019_2020"),
                   starts_with("eleve"))

# Sauvegarder un dataframe R en format Stata (.dta)
write_dta(data, "../clean_data/section2_correct.dta")
```
